@using VideoTeca.Models.ViewModels
@model VideoViewModel
@{
    ViewBag.Title = "Enviar vídeo";
    List<VideoTeca.Models.area> areas = ViewBag.Areas;
    bool termos = ViewBag.Termos;
}

@using (Html.BeginForm("EnviarVideo", "Professor", FormMethod.Post, new { enctype = "multipart/form-data", id = "enviarVideo", autocomplete = "on" }))
{
    <div class="form-floating mb-3">
        @Html.LabelFor(m => m.Titulo, "Título:")
        @Html.TextBoxFor(m => m.Titulo, new { @class = "form-control", placeholder = "Título ou Palavras-Chave", required = "required" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Descricao, "Descrição:")
        @Html.TextAreaFor(m => m.Descricao, new { @class = "form-control", maxlength = "4000" })
    </div>

    <div class="form-floating mb-3">
        @Html.LabelFor(m => m.Url, "Link do vídeo:")
        @Html.TextBoxFor(m => m.Url, new { @class = "form-control", placeholder = "Link do vídeo", required = "required" })
    </div>

    <div class="row gx-2 mb-5">
        <div class="col-5 col-lg-3">
            <div class="form-floating">
                @Html.LabelFor(m => m.AreaId, "Área")
                @Html.DropDownListFor(m => m.AreaId, new SelectList(areas, "id", "nome"), "Escolha uma área", new { @class = "form-select", id = "floatingSelect1", required = "required" })
            </div>
        </div>

        <div class="col-5 col-lg-3">
            <div class="form-floating">
                @Html.LabelFor(m => m.SubareaId, "Subárea")
                @Html.DropDownListFor(m => m.SubareaId, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"), "Escolha uma Subárea", new { @class = "form-select", id = "floatingSelect", disabled = "disabled" })
            </div>
        </div>
    </div>

    <div class="form-group form-check">
        <a class="btn btn-primary" style="float: right; color: white; text-decoration: none; @(termos ? "display:none;" : "")" id="aceitarTermos" name="aceitarTermos">Aceitar termos</a>
    </div>

    <button type="submit" class="btn btn-primary offset-11" style="float:right" id="enviarBtn" @(termos ? "" : "disabled")>Enviar</button>
}

@section Scripts {
    <script>
    function fetchSubAreas() {
        var areaId = $('#floatingSelect1').val();
        $.ajax({
            dataType: "json",
            method: "POST",
            url: "@Url.Action("BuscarSubArea", "Professor")",
            data: { id: areaId },
        })
        .done(function(data) {
            var select = $("#floatingSelect");
            select.empty().append($('<option>', { value: '', text: 'Escolha uma Subárea' }));

            data.forEach(function(item) {
                select.append($('<option>', {
                    value: item.Id,
                    text: item.Nome
                }));
            });

            select.prop('disabled', false);
        })
        .fail(function(jqXHR, textStatus, errorThrown) {
            console.error('Erro na chamada AJAX: ' + textStatus);
        });
    }

    $('#floatingSelect1').on("change", fetchSubAreas);
    </script>

}

